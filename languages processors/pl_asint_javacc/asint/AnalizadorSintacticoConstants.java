/* Generated By:JavaCC: Do not edit this line. AnalizadorSintacticoConstants.java */
package asint;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AnalizadorSintacticoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int letra = 1;
  /** RegularExpression Id. */
  int digito = 2;
  /** RegularExpression Id. */
  int float0 = 3;
  /** RegularExpression Id. */
  int real = 4;
  /** RegularExpression Id. */
  int int0 = 5;
  /** RegularExpression Id. */
  int amp = 7;
  /** RegularExpression Id. */
  int num = 8;
  /** RegularExpression Id. */
  int bool = 9;
  /** RegularExpression Id. */
  int true0 = 10;
  /** RegularExpression Id. */
  int false0 = 11;
  /** RegularExpression Id. */
  int and = 12;
  /** RegularExpression Id. */
  int or = 13;
  /** RegularExpression Id. */
  int not = 14;
  /** RegularExpression Id. */
  int id = 15;
  /** RegularExpression Id. */
  int dot = 16;
  /** RegularExpression Id. */
  int semicolon = 17;
  /** RegularExpression Id. */
  int popen = 18;
  /** RegularExpression Id. */
  int pclose = 19;
  /** RegularExpression Id. */
  int add = 20;
  /** RegularExpression Id. */
  int sub = 21;
  /** RegularExpression Id. */
  int mul = 22;
  /** RegularExpression Id. */
  int div = 23;
  /** RegularExpression Id. */
  int eq = 24;
  /** RegularExpression Id. */
  int ne = 25;
  /** RegularExpression Id. */
  int ge = 26;
  /** RegularExpression Id. */
  int gt = 27;
  /** RegularExpression Id. */
  int le = 28;
  /** RegularExpression Id. */
  int lt = 29;
  /** RegularExpression Id. */
  int assign = 30;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<letra>",
    "<digito>",
    "<float0>",
    "<real>",
    "<int0>",
    "<token of kind 6>",
    "\"&&\"",
    "\"num\"",
    "\"bool\"",
    "\"true\"",
    "\"false\"",
    "\"and\"",
    "\"or\"",
    "\"not\"",
    "<id>",
    "\".\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"==\"",
    "\"!=\"",
    "\">=\"",
    "\">\"",
    "\"<=\"",
    "\"<\"",
    "\"=\"",
  };

}
